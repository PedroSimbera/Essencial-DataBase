Formas de relacionar mais de uma tabela do esquema

Exitem formas de realizar a relação das tabelas com JOIN:
1. Idênticas e Tridimensionais
2. Não-Idênticas
3. AutoJunção
4. Junção Externa

Idênticas - Com e sem apelido. Trata-se de unir o nome da tabela com a coluna dela e depois o FROM e JOIN com o ON (relação de chave primária com estrangeira):
SELECT e.empno, e.ename, e.deptno, d.deptno, d.loc
FROM scott.emp e JOIN scott.dept d
ON (e.deptno=d.deptno);

SELECT emp.empno, emp.ename, emp.deptno, dept.deptno, dept.loc
FROM scott.emp JOIN scott.dept 
ON (emp.deptno=dept.deptno);

Tridimensionais - Junção na mesma consulta de mais de duas tabelas, ainda com similaridades entre chave estrangeira e primária
nas tabelas :
SELECT employee_id, city, department_name
FROM employees e
JOIN departments d
ON d.department_id = e.department_id
JOIN locations l
ON d.location_id = l.location_id;

Não Idênticas - Apesar de o exemplo ter como relacionar com o job_id de employees e jobs, a ideia do não Idênticas
é quando não tem ou não se faz uma relação por meio de igualdade entre chave primária e chave estrangeira, busca-se
uma relação entre elas, e no caso seria a averiguação daqueles salários que estão dentre da faixa salarial do plano
de carreiras, min e max. Para tanto, note que busca pelo salary between duas colunas e não por salary = salary:
SELECT e.employee_id, e.first_name, e.salary, j.min_salary, j.max_salary
FROM employees e JOIN jobs j
ON e.salary
NOT BETWEEN j.min_salary AND j.max_salary;

SELECT e.employee_id, e.first_name, e.salary, j.min_salary, j.max_salary
FROM employees e JOIN jobs j
ON e.salary
BETWEEN j.min_salary AND j.max_salary;

*** SELECT e.ename,e.sal,s.grade,s.losal,s.hisal
FROM scott.emp e JOIN salgrade s
ON (e.sal BETWEEN s.losal AND s.hisal);

Junção Externa:
Uma junção externa (outer join) é uma operação de junção em SQL que retorna registros de duas ou mais tabelas, incluindo os registros que não possuem correspondência entre as tabelas relacionadas. Em outras palavras, uma junção externa inclui os registros das tabelas mesmo quando não há correspondência entre as colunas relacionadas.
Além disso, tem de escolher o left, right ou full, que estão relacionados, respectivamente, com o comando que está a esquerda do join, entendendo que este é o privilegiado, o mesmo com o right. Ou que apareça todos.
Mais do que isso, trata-se de privilegiar no  sentido de apresentar os dados da tabela a esquerda/direita ainda que não tenha correspondência com a outra tabela. 

SELECT e.last_name, d.department_id, d.department_name
FROM hr.employees e LEFT OUTER JOIN hr.departments d
ON (e.department_id = d.department_id)
	ORDER BY 1;

SELECT e.last_name, d.department_id, d.department_name
FROM hr.employees e 
RIGHT OUTER JOIN hr.departments d
ON (e.department_id = d.department_id);